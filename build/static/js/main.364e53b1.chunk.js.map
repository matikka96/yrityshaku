{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","state","baseUrl","payload","totalResults","maxResults","resultsFrom","companyRegistrationFrom","loadingData","streetAddressPostCode","registeredOffice","businessLineCode","showModal","loadData","Object","assign","setState","axios","get","params","then","result","console","log","csv","data","results","keys","join","forEach","e","values","element","document","createElement","setAttribute","encodeURIComponent","style","display","body","appendChild","click","removeChild","resetParams","catch","err","alert","this","className","Modal","show","onHide","centered","Header","closeButton","Title","Body","href","target","rel","onClick","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","cx","cy","r","d","x1","y1","x2","y2","htmlFor","type","id","placeholder","value","onChange","isNaN","length","min","max","disabled","role","Component","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.364e53b1.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Modal } from \"react-bootstrap\";\n\nexport default class App extends Component {\n  state = {\n    baseUrl: \"http://avoindata.prh.fi/bis/v1\",\n    payload: {\n      totalResults: \"true\",\n      maxResults: \"1000\",\n      resultsFrom: \"0\",\n      companyRegistrationFrom: \"2014-02-28\"\n    },\n    loadingData: false,\n    streetAddressPostCode: \"\",\n    registeredOffice: \"\",\n    businessLineCode: \"\",\n    showModal: false\n  };\n\n  loadData = () => {\n    let {\n      baseUrl,\n      streetAddressPostCode,\n      registeredOffice,\n      businessLineCode\n    } = this.state;\n    let payload = Object.assign({}, this.state.payload);\n    if (streetAddressPostCode !== \"\") {\n      payload.streetAddressPostCode = streetAddressPostCode;\n    }\n    if (registeredOffice !== \"\") {\n      payload.registeredOffice = registeredOffice;\n    }\n    if (businessLineCode !== \"\") {\n      payload.businessLineCode = businessLineCode;\n    }\n    this.setState({ loadingData: true });\n    axios\n      .get(baseUrl, { params: payload })\n      .then(result => {\n        console.log(payload);\n        console.log(result);\n        let csv = \"\";\n        let data = result.data.results;\n        let keys = Object.keys(data[0]).join();\n        csv += keys + \"\\n\";\n        data.forEach(e => {\n          csv += Object.values(e).join() + \"\\n\";\n        });\n        var element = document.createElement(\"a\");\n        element.setAttribute(\n          \"href\",\n          \"data:text/plain;charset=utf-8,\" + encodeURIComponent(csv)\n        );\n        element.setAttribute(\n          \"download\",\n          `yritykset${registeredOffice ? `-${registeredOffice}` : \"\"}${\n            streetAddressPostCode ? `-${streetAddressPostCode}` : \"\"\n          }${businessLineCode ? `-${businessLineCode}` : \"\"}.csv`\n        );\n        element.style.display = \"none\";\n        document.body.appendChild(element);\n        element.click();\n        document.body.removeChild(element);\n      })\n      .then(this.resetParams)\n      .catch(err => {\n        this.setState({ loadingData: false }, () =>\n          alert(`Väärin syötetyt parametrit. \\n ${err}`)\n        );\n      });\n  };\n\n  resetParams = () => {\n    this.setState({\n      registeredOffice: \"\",\n      streetAddressPostCode: \"\",\n      businessLineCode: \"\",\n      loadingData: false\n    });\n  };\n\n  render() {\n    const { streetAddressPostCode, registeredOffice, businessLineCode } = this.state;\n    return (\n      <div className=\"container\">\n        <Modal\n          show={this.state.showModal}\n          onHide={() => this.setState({ showModal: false })}\n          centered\n        >\n          <Modal.Header closeButton>\n            <Modal.Title>FAQ</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <strong>Mitä tämä työkalu tekee?</strong>\n            <p>\n              Työkalun tarkoituksena on hakea yrityksiä ja niiden tietoja toimialan ja\n              maantieteellisen sijainnin perusteella. Hakutulos on ladattavissa CSV\n              formaatissa. Sisältö haetaan{\" \"}\n              <a\n                href=\"https://avoindata.prh.fi/index.html\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                PRH\n              </a>\n              :n avoimen datan rajapinnasta.\n            </p>\n            <strong>Käyttöohjeet</strong>\n            <p className=\"m-0\">\n              Haku voidaan suorittaa seuraavia parametreja hyödyntäen:\n            </p>\n            <ul>\n              <li>\n                Kotipaikka <span className=\"ml-2 small\">Oltava tarkka vastine!</span>\n              </li>\n              <li>\n                Toimiala\n                <a\n                  className=\"ml-2 small\"\n                  href=\"http://www.stat.fi/meta/luokitukset/toimiala/001-2008/index.html\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  lisätietoa\n                </a>\n              </li>\n              <li>\n                Postinumero\n                <a\n                  className=\"ml-2 small\"\n                  href=\"https://fi.wikipedia.org/wiki/Luettelo_Suomen_postinumeroista_kunnittain\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  lisätietoa\n                </a>\n              </li>\n            </ul>\n            <span>\n              Vähintään yksi parametri on käytettävä, mutta useampaakin voi käyttää\n              samanaikaisesti. Jos parametri(t) on syötetty puutteellisesti, sovellus\n              ilmoittaa asiasta.\n            </span>\n          </Modal.Body>\n        </Modal>\n\n        <div className=\"d-flex align-items-center justify-content-center min-vh-100\">\n          <div className=\"card\">\n            <h4 className=\"card-header\">\n              Yrityshaku\n              <button\n                className=\"btn float-right p-0\"\n                onClick={() => this.setState({ showModal: true })}\n              >\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width=\"24\"\n                  height=\"24\"\n                  viewBox=\"0 0 24 24\"\n                  fill=\"none\"\n                  stroke=\"#000000\"\n                  strokeWidth=\"2\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                >\n                  <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\n                  <path d=\"M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3\"></path>\n                  <line x1=\"12\" y1=\"17\" x2=\"12\" y2=\"17\"></line>\n                </svg>\n              </button>\n            </h4>\n            <div className=\"card-body\">\n              <form>\n                <div className=\"form-row\">\n                  <div className=\"form-group col\">\n                    <label htmlFor=\"registered-office\">Kotipaikka</label>\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      id=\"registered-office\"\n                      placeholder=\"esim. Lappeenranta\"\n                      value={this.state.registeredOffice}\n                      onChange={e => this.setState({ registeredOffice: e.target.value })}\n                    ></input>\n                  </div>\n                </div>\n                <div className=\"form-row\">\n                  <div className=\"form-group col-sm-6\">\n                    <label htmlFor=\"registered-office\">Toimialakoodi</label>\n                    <a\n                      className=\"ml-2 small\"\n                      href=\"http://www.stat.fi/meta/luokitukset/toimiala/001-2008/index.html\"\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      lisätietoa\n                    </a>\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      id=\"registered-office\"\n                      placeholder=\"esim. 07\"\n                      value={this.state.businessLineCode}\n                      onChange={e =>\n                        !isNaN(e.target.value) && e.target.value.length < 3\n                          ? this.setState({\n                              businessLineCode: e.target.value\n                            })\n                          : null\n                      }\n                    ></input>\n                  </div>\n                  <div className=\"form-group col-sm-6\">\n                    <label htmlFor=\"post-code\">Postinumero</label>\n                    <a\n                      className=\"ml-2 small\"\n                      href=\"https://fi.wikipedia.org/wiki/Luettelo_Suomen_postinumeroista_kunnittain\"\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      lisätietoa\n                    </a>\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      id=\"post-code\"\n                      placeholder=\"esim. 53850\"\n                      value={this.state.streetAddressPostCode}\n                      min=\"9999\"\n                      max=\"99999\"\n                      onChange={e =>\n                        !isNaN(e.target.value) && e.target.value.length < 6\n                          ? this.setState({\n                              streetAddressPostCode: e.target.value\n                            })\n                          : null\n                      }\n                    ></input>\n                  </div>\n                </div>\n              </form>\n            </div>\n            <div className=\"card-footer\">\n              <button\n                type=\"button\"\n                className=\"btn btn-outline-secondary\"\n                disabled={\n                  this.state.registeredOffice === \"\" &&\n                  this.state.streetAddressPostCode === \"\" &&\n                  this.state.businessLineCode === \"\"\n                    ? true\n                    : false\n                }\n                onClick={this.resetParams}\n              >\n                Tyhjennä\n              </button>\n              <button\n                type=\"button\"\n                className=\"btn btn-dark float-right\"\n                disabled={\n                  registeredOffice.length < 3 &&\n                  streetAddressPostCode.length !== 5 &&\n                  businessLineCode.length !== 2\n                    ? true\n                    : false\n                }\n                onClick={this.loadData}\n              >\n                {this.state.loadingData ? (\n                  <div className=\"spinner-border spinner-border-sm mr-2\" role=\"status\">\n                    <span className=\"sr-only\">Loading...</span>\n                  </div>\n                ) : null}\n                Lataa yritystiedot\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}